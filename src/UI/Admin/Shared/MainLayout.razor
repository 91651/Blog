@using Blog.Admin.Auth
@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject AppAuthenticationService authenticationService

<Layout Style="height:100vh;">
    <BasicLayout
        Logo="@("https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg")"
        MenuData="MenuData"
        MenuAccordion
        Theme="MenuTheme.Light">
        <RightContentRender>
            <RightContent OnUserItemSelected="SelectedItem" />
        </RightContentRender>
        <MenuExtraRender>
            <Select
                TItem="string"
                TItemValue="string"
                DefaultValue="@("product")"
                Size="InputSize.Small"
                Style="width: 100%;">
                <SelectOptions>
                    <SelectOption TItem="string" TItemValue="string" Value="@("product")" Label="Product" />
                </SelectOptions>
            </Select>
        </MenuExtraRender>
        <FooterRender>
            <AntDesign.ProLayout.Footer />
        </FooterRender>
        <ChildContent>
            <ReuseTabs></ReuseTabs>
        </ChildContent>
    </BasicLayout>
    <SettingDrawer />
</Layout>


@code
{
    private MenuDataItem[] MenuData { get; set; } = {};

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        MenuData = new MenuDataItem[]
            {
                new ()
                {
                    Path = "",
                    Name = "首页",
                    Key = "home",
                    Icon = "home"
                },
                new ()
                {
                    Name = "内容管理",
                    Key = "content",
                    Icon = "file-text",
                    Children = new MenuDataItem[]
                    {   new ()
                        {
                            Path = "channel",
                            Name = "文章栏目",
                            Key = "channel",
                            Icon = "bars"
                        },
                        new ()
                        {
                            Path = "article",
                            Name = "文章列表",
                            Key = "article",
                            Icon = "file-done",
                        },
                        new ()
                        {
                            Path = "article/edit",
                            Name = "文章添加",
                            Key = "article-add",
                            Icon = "edit",
                        }
                    }
                },
                new ()
                {
                    Name = "系统管理",
                    Key = "system",
                    Icon = "setting",
                    Children = new MenuDataItem[]
                    {   new ()
                        {
                            Path = "role",
                            Name = "角色管理",
                            Key = "role",
                            Icon = "team"
                        },
                        new ()
                        {
                            Path = "user",
                            Name = "用户管理",
                            Key = "user",
                            Icon = "user",
                        },
                        new ()
                        {
                            Path = "url-rewrite",
                            Name = "URL重定向",
                            Key = "url-rewrite",
                            Icon = "link",
                        }
                    }
                }
            };
    }

    private async Task SelectedItem(MenuItem item)
    {
        if (item.Key == "logout")
        {
            var isSignOut = await authenticationService.SignOut();
            if (isSignOut)
            {
                Navigation.NavigateTo("/admin/signin");
            }
        }
    }
}
@page "/"
@rendermode InteractiveAuto

@using Blog.Model
@using Blog.Client.Data

@inject PersistentComponentState _componentState
@inject IClientApiProvider _api

<PageTitle>遇见时光-1023.org.cn | 博客首页 | 学习技术、记录生活</PageTitle>
<HeadContent>
    <meta name="description" content="人生百态，爱我所爱！">
</HeadContent>
<section class="site-content container">
    @foreach (var article in articles)
    {
        <article class="hasThumb flex">
            <div class="article-content">
                <h2 class="entry-title hidden">
                    <a class="hoverColor" href="/p/@article.Id" title="@article.Title" rel="bookmark">@article.Title</a>
                </h2>
                <div class="entry-content hidden">
                    @article.Summary
                </div>
                <div class="entry-info">
                    <span class="info">
                        <svg class="icon">
                            <use xlink:href="#icon-book" />
                        </svg>
                        @article.ChannelName
                    </span>
                    <span class="info">
                        <svg class="icon">
                            <use xlink:href="#icon-calendar" />
                        </svg>                        @($"{article.Created:yyyy年M月d日 HH:mm}")
                    </span>
                    <span class="info">
                        <svg class="icon">
                            <use xlink:href="#icon-user" />
                        </svg>                        @article.Author
                    </span>
                    <span class="info">
                        <svg class="icon">
                            <use xlink:href="#icon-eye" />
                        </svg>                        @article.Viewed
                    </span>
                    <span class="info">
                        <svg class="icon">
                            <use xlink:href="#icon-message" />
                        </svg>                        @article.CommentCount
                    </span>
                </div>
            </div>
            <div class="entry-thumb">
                <a class="focus hidden" href="/p/@article.Id" title="@article.Title">
                    @if (@article.File != null)
                    {
                        <img loading="auto" src="@Path.Combine(article.File.Path, article.File.Name)" alt="@article.Title" title="@article.Title">
                    }
                </a>
            </div>
        </article>
    }
    <div class="pagenavi flex">
        <a class="load-more" @onclick="GetArticles">@loadMoreText</a>
    </div>
</section>

@code {
    private int page = 1;
    private string loadMoreText = "阅读更多";
    private ArticleQueryModel query = new() { PageSize = 20 };
    private List<ArticleListModel> articles = new();


    protected override async Task OnInitializedAsync()
    {
        _componentState.RegisterOnPersisting(PersistData);
        if (_componentState.TryTakeFromJson<int>(nameof(page), out var _page))
        {
            page = _page;

        }
        if (_componentState.TryTakeFromJson<List<ArticleListModel>>(nameof(articles), out var _articles) && _articles != null)
        {
            articles = _articles;

        }
        else
        {
            await GetArticles();
        }

    }

    private Task PersistData()
    {
        _componentState.PersistAsJson(nameof(page), page);
        _componentState.PersistAsJson(nameof(articles), articles);
        return Task.CompletedTask;
    }

    private async Task GetArticles()
    {
        query.PageIndex = page++;
        var result = (await _api.GetArticlesAsync(query));
        articles.AddRange(result.Data);
        if (articles.Count >= result.Total)
        {
            loadMoreText = "没有更多内容了！";
        }
    }
}